!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AuthenticatedUser	authenticatedUser.go	/^type AuthenticatedUser struct {$/;"	t
BroadcastConnection	server.go	/^func BroadcastConnection (message string, activeUsers map[string]AuthenticatedUser){$/;"	f
Client	client.go	/^type Client struct {$/;"	t
CreateClient	client.go	/^func CreateClient(conn net.Conn) Client{$/;"	f
CreateCredentials	client.go	/^func CreateCredentials() (string, string){$/;"	f
GenerateUuid	uuidGenerator.go	/^func GenerateUuid () string{$/;"	f
Listen	client.go	/^func (client *Client) Listen() {$/;"	f
LogIn	client.go	/^func (client *Client) LogIn() {$/;"	f
Read	client.go	/^func (client *Client) Read() {$/;"	f
SetupCloseHandlerClient	client.go	/^func SetupCloseHandlerClient(conn net.Conn) {$/;"	f
UserExists	server.go	/^func UserExists(username string, activeUsers map[string]AuthenticatedUser) (exists bool) {$/;"	f
Write	client.go	/^func (client *Client) Write() {$/;"	f
main	authenticatedUser.go	/^package main$/;"	p
main	chatroom.go	/^func main() {$/;"	f
main	chatroom.go	/^package main$/;"	p
main	client.go	/^package main$/;"	p
main	server.go	/^func main() {$/;"	f
main	server.go	/^package main$/;"	p
main	uuidGenerator.go	/^package main$/;"	p
